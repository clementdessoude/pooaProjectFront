# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

defaults: &defaults
  working_directory: ~/front

version: 2
jobs:
  build:
    <<: *defaults
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm test
      - run: npm run build

      - persist_to_workspace:
          root: ~/front
          paths:
            - build/*
            - Dockerfile

  docker:
    <<: *defaults
    machine:
      enabled: true
    steps:
      - attach_workspace:
          at: ~/front
      - run:
          name: Build image
          command: |
            docker build . -f ~/front/Dockerfile -t clement26695/myseries_front
      - run:
          name: Push image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push clement26695/myseries_front

  deploy:
    <<: *defaults
    machine:
      enabled: true
    steps:
      - attach_workspace:
          at: ~/front
      - run:
          name: Delete old files
          command: |
            ssh $SSH_USER@$SSH_HOST "rm -rf ~/front/build && mkdir ~/front/build"
      - run:
          name: Deploy Over SSH
          command: |
            scp -r ~/front/build $SSH_USER@$SSH_HOST:~/front

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - docker:
          requires:
              - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
          context: SSH-keys
